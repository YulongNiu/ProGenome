% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getGenomicInfo.R
\name{GetSpeFtpUrl}
\alias{GetSpeFtpUrl}
\alias{KEGGSpe2NCBIAss}
\alias{LatestAss}
\alias{AutoSpeFtpUrl}
\alias{ListFileFtpUrl}
\alias{read.gff}
\title{Retrieve genome FTP URL}
\usage{
GetSpeFtpUrl(KEGGSpe, database = "GenBank")

KEGGSpe2NCBIAss(KEGGSpe)

LatestAss(assNum)

AutoSpeFtpUrl(KEGGSpe)

ListFileFtpUrl(ftpUrl)

read.gff(filePath, isurl = FALSE, isgz = FALSE)
}
\arguments{
\item{KEGGSpe}{A KEGG species ID}

\item{database}{"GenBank", "RefSeq", or c("GenBank", "RefSeq").}

\item{assNum}{assembly number or the genome GenBank/RefSeq number}

\item{ftpUrl}{FTP url that can be the output of function  getFtpUrl()}

\item{filePath}{A local file path or a web url.}

\item{isurl}{Whether a url (TRUE) or not (FALSE).}

\item{isgz}{Whether a gzfile (TRUE) or not (FALSE).}
}
\value{
FTP url.

KEGGSpe2NCBIAss(): NCBI assembly ID

LatestAss(): latest assembly number

AutoSpeFtpUrl(): RefSeq or GenBank FTP url

ListFileFtpUrl(): a list of download FTP urls

read.gff(): a table of raw gff file
}
\description{
Get genomic information NCBI FTP url
}
\details{
GetSpeFtpUrl(): get the FTP url storing genome information from GenBank or RefSeq database. This function is mainly used to get the species genome assembly information.

AutoSpeFtpUrl(): automatically choose the FTP url. This function trys the RefSeq at first and then GenBank.

ListFtpFileUrl(): list the file download FTP urls.

read.gff(): read in a raw gff file (or gz file) from the local disk or web url.
}
\examples{
## E. coli genome GenBank and RefSeq FTP
ecoliUrl <- GetSpeFtpUrl('eco', c('GenBank', 'RefSeq'))
## automatically choose FTP
ecoliAutoUrl <- AutoSpeFtpUrl('eco')
## list E. coli FTP files
ecoliFiles <- ListFileFtpUrl(ecoliAutoUrl)

## read in gff file
gffUrl <- ecoliFiles[grepl('gff', ecoliFiles)]
ecoligff <- read.gff(gffUrl, isurl = TRUE, isgz = TRUE)

## read in the dra (Deinococcus radiodurans R1) gff gz file in local disk
gzPath <- system.file("extdata", "dra.gff.gz", package = "ProGenome")
dragff <- read.gff(gzPath, isurl = FALSE, isgz = TRUE)

## read in the dra gff file in local disk
gffPath <- system.file("extdata", "dra.gff", package = "ProGenome")
dragff <- read.gff(gzPath, isurl = FALSE, isgz = FALSE)

\dontrun{
## read in dra gff files through FTP URL
draUrl <- AutoSpeFtpUrl('dra')
dragff <- ListFileFtpUrl(draliUrl)
}
}
\references{
How to read in gz files into R from FTP URL \url{https://stackoverflow.com/questions/9548630/read-gzipped-csv-directly-from-a-url-in-r}
}
\author{
Yulong Niu \email{niuylscu@gmail.com}

Yulong Niu \email{niuylscu@gmail.com}

Yulong Niu \email{niuylscu@gmail.com}

Yulong Niu \email{niuylscu@gmail.com}

Yulong Niu \email{niuylscu@gmail.com}

Yulong Niu \email{niuylscu@gmail.com}
}
\keyword{internal}
